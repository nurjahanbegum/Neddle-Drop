//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace GTRHRIS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("dsEarnLeave")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsEarnLeave : global::System.Data.DataSet {
        
        private rptEarnLeaveDataTable tablerptEarnLeave;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public dsEarnLeave() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected dsEarnLeave(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["rptEarnLeave"] != null)) {
                    base.Tables.Add(new rptEarnLeaveDataTable(ds.Tables["rptEarnLeave"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public rptEarnLeaveDataTable rptEarnLeave {
            get {
                return this.tablerptEarnLeave;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            dsEarnLeave cln = ((dsEarnLeave)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["rptEarnLeave"] != null)) {
                    base.Tables.Add(new rptEarnLeaveDataTable(ds.Tables["rptEarnLeave"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tablerptEarnLeave = ((rptEarnLeaveDataTable)(base.Tables["rptEarnLeave"]));
            if ((initTable == true)) {
                if ((this.tablerptEarnLeave != null)) {
                    this.tablerptEarnLeave.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "dsEarnLeave";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dsEarnLeave.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablerptEarnLeave = new rptEarnLeaveDataTable();
            base.Tables.Add(this.tablerptEarnLeave);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializerptEarnLeave() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            dsEarnLeave ds = new dsEarnLeave();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void rptEarnLeaveRowChangeEventHandler(object sender, rptEarnLeaveRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class rptEarnLeaveDataTable : global::System.Data.TypedTableBase<rptEarnLeaveRow> {
            
            private global::System.Data.DataColumn columnComName;
            
            private global::System.Data.DataColumn columnComAdd1;
            
            private global::System.Data.DataColumn columnComAdd2;
            
            private global::System.Data.DataColumn columnImgPath;
            
            private global::System.Data.DataColumn columnCaption;
            
            private global::System.Data.DataColumn columnEmpID;
            
            private global::System.Data.DataColumn columnEmpCode;
            
            private global::System.Data.DataColumn columnEmpName;
            
            private global::System.Data.DataColumn columndtJoin;
            
            private global::System.Data.DataColumn columndtReleased;
            
            private global::System.Data.DataColumn columnSectName;
            
            private global::System.Data.DataColumn columnDesigName;
            
            private global::System.Data.DataColumn columnProssType;
            
            private global::System.Data.DataColumn columnPaySource;
            
            private global::System.Data.DataColumn columnPayMode;
            
            private global::System.Data.DataColumn columnEmpType;
            
            private global::System.Data.DataColumn columnBankAcNo;
            
            private global::System.Data.DataColumn columnGSUSD;
            
            private global::System.Data.DataColumn columnGS;
            
            private global::System.Data.DataColumn columnBSUSD;
            
            private global::System.Data.DataColumn columnBS;
            
            private global::System.Data.DataColumn columnELYear;
            
            private global::System.Data.DataColumn columnTotalDay;
            
            private global::System.Data.DataColumn columnPrevTotalDay;
            
            private global::System.Data.DataColumn columnGrandTotalDay;
            
            private global::System.Data.DataColumn columnTotalLeave;
            
            private global::System.Data.DataColumn columnDeductLeave;
            
            private global::System.Data.DataColumn columnNetLeave;
            
            private global::System.Data.DataColumn columnJan;
            
            private global::System.Data.DataColumn columnFeb;
            
            private global::System.Data.DataColumn columnMar;
            
            private global::System.Data.DataColumn columnApr;
            
            private global::System.Data.DataColumn columnMay;
            
            private global::System.Data.DataColumn columnJun;
            
            private global::System.Data.DataColumn columnJul;
            
            private global::System.Data.DataColumn columnAug;
            
            private global::System.Data.DataColumn columnSep;
            
            private global::System.Data.DataColumn columnOct;
            
            private global::System.Data.DataColumn columnNov;
            
            private global::System.Data.DataColumn columnDec;
            
            private global::System.Data.DataColumn columnRate;
            
            private global::System.Data.DataColumn columnStamp;
            
            private global::System.Data.DataColumn columnStampUSD;
            
            private global::System.Data.DataColumn columnELAmount;
            
            private global::System.Data.DataColumn columnELAmountUSD;
            
            private global::System.Data.DataColumn columnNetPay;
            
            private global::System.Data.DataColumn columnNetPayUSD;
            
            private global::System.Data.DataColumn columnTK1000;
            
            private global::System.Data.DataColumn columnTK500;
            
            private global::System.Data.DataColumn columnTK100;
            
            private global::System.Data.DataColumn columnTK50;
            
            private global::System.Data.DataColumn columnTK20;
            
            private global::System.Data.DataColumn columnTK10;
            
            private global::System.Data.DataColumn columnTK5;
            
            private global::System.Data.DataColumn columnTK2;
            
            private global::System.Data.DataColumn columnTK1;
            
            private global::System.Data.DataColumn columnInWords;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveDataTable() {
                this.TableName = "rptEarnLeave";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rptEarnLeaveDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected rptEarnLeaveDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComNameColumn {
                get {
                    return this.columnComName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComAdd1Column {
                get {
                    return this.columnComAdd1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComAdd2Column {
                get {
                    return this.columnComAdd2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImgPathColumn {
                get {
                    return this.columnImgPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CaptionColumn {
                get {
                    return this.columnCaption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpIDColumn {
                get {
                    return this.columnEmpID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpCodeColumn {
                get {
                    return this.columnEmpCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpNameColumn {
                get {
                    return this.columnEmpName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtJoinColumn {
                get {
                    return this.columndtJoin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtReleasedColumn {
                get {
                    return this.columndtReleased;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SectNameColumn {
                get {
                    return this.columnSectName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DesigNameColumn {
                get {
                    return this.columnDesigName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProssTypeColumn {
                get {
                    return this.columnProssType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PaySourceColumn {
                get {
                    return this.columnPaySource;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PayModeColumn {
                get {
                    return this.columnPayMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpTypeColumn {
                get {
                    return this.columnEmpType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAcNoColumn {
                get {
                    return this.columnBankAcNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GSUSDColumn {
                get {
                    return this.columnGSUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GSColumn {
                get {
                    return this.columnGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BSUSDColumn {
                get {
                    return this.columnBSUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BSColumn {
                get {
                    return this.columnBS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ELYearColumn {
                get {
                    return this.columnELYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalDayColumn {
                get {
                    return this.columnTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrevTotalDayColumn {
                get {
                    return this.columnPrevTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GrandTotalDayColumn {
                get {
                    return this.columnGrandTotalDay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalLeaveColumn {
                get {
                    return this.columnTotalLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeductLeaveColumn {
                get {
                    return this.columnDeductLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetLeaveColumn {
                get {
                    return this.columnNetLeave;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JanColumn {
                get {
                    return this.columnJan;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FebColumn {
                get {
                    return this.columnFeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarColumn {
                get {
                    return this.columnMar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AprColumn {
                get {
                    return this.columnApr;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MayColumn {
                get {
                    return this.columnMay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JunColumn {
                get {
                    return this.columnJun;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JulColumn {
                get {
                    return this.columnJul;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AugColumn {
                get {
                    return this.columnAug;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SepColumn {
                get {
                    return this.columnSep;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OctColumn {
                get {
                    return this.columnOct;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NovColumn {
                get {
                    return this.columnNov;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DecColumn {
                get {
                    return this.columnDec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RateColumn {
                get {
                    return this.columnRate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StampColumn {
                get {
                    return this.columnStamp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StampUSDColumn {
                get {
                    return this.columnStampUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ELAmountColumn {
                get {
                    return this.columnELAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ELAmountUSDColumn {
                get {
                    return this.columnELAmountUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPayColumn {
                get {
                    return this.columnNetPay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NetPayUSDColumn {
                get {
                    return this.columnNetPayUSD;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK1000Column {
                get {
                    return this.columnTK1000;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK500Column {
                get {
                    return this.columnTK500;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK100Column {
                get {
                    return this.columnTK100;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK50Column {
                get {
                    return this.columnTK50;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK20Column {
                get {
                    return this.columnTK20;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK10Column {
                get {
                    return this.columnTK10;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK5Column {
                get {
                    return this.columnTK5;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK2Column {
                get {
                    return this.columnTK2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TK1Column {
                get {
                    return this.columnTK1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InWordsColumn {
                get {
                    return this.columnInWords;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveRow this[int index] {
                get {
                    return ((rptEarnLeaveRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rptEarnLeaveRowChangeEventHandler rptEarnLeaveRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rptEarnLeaveRowChangeEventHandler rptEarnLeaveRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rptEarnLeaveRowChangeEventHandler rptEarnLeaveRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event rptEarnLeaveRowChangeEventHandler rptEarnLeaveRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddrptEarnLeaveRow(rptEarnLeaveRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveRow AddrptEarnLeaveRow(
                        string ComName, 
                        string ComAdd1, 
                        string ComAdd2, 
                        string ImgPath, 
                        string Caption, 
                        int EmpID, 
                        string EmpCode, 
                        string EmpName, 
                        string dtJoin, 
                        string dtReleased, 
                        string SectName, 
                        string DesigName, 
                        string ProssType, 
                        string PaySource, 
                        string PayMode, 
                        string EmpType, 
                        string BankAcNo, 
                        decimal GSUSD, 
                        int GS, 
                        decimal BSUSD, 
                        int BS, 
                        int ELYear, 
                        int TotalDay, 
                        int PrevTotalDay, 
                        int GrandTotalDay, 
                        int TotalLeave, 
                        int DeductLeave, 
                        int NetLeave, 
                        int Jan, 
                        int Feb, 
                        int Mar, 
                        int Apr, 
                        int May, 
                        int Jun, 
                        int Jul, 
                        int Aug, 
                        int Sep, 
                        int Oct, 
                        int Nov, 
                        int Dec, 
                        decimal Rate, 
                        int Stamp, 
                        int StampUSD, 
                        int ELAmount, 
                        int ELAmountUSD, 
                        int NetPay, 
                        int NetPayUSD, 
                        int TK1000, 
                        int TK500, 
                        int TK100, 
                        int TK50, 
                        int TK20, 
                        int TK10, 
                        int TK5, 
                        int TK2, 
                        int TK1, 
                        string InWords) {
                rptEarnLeaveRow rowrptEarnLeaveRow = ((rptEarnLeaveRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ComName,
                        ComAdd1,
                        ComAdd2,
                        ImgPath,
                        Caption,
                        EmpID,
                        EmpCode,
                        EmpName,
                        dtJoin,
                        dtReleased,
                        SectName,
                        DesigName,
                        ProssType,
                        PaySource,
                        PayMode,
                        EmpType,
                        BankAcNo,
                        GSUSD,
                        GS,
                        BSUSD,
                        BS,
                        ELYear,
                        TotalDay,
                        PrevTotalDay,
                        GrandTotalDay,
                        TotalLeave,
                        DeductLeave,
                        NetLeave,
                        Jan,
                        Feb,
                        Mar,
                        Apr,
                        May,
                        Jun,
                        Jul,
                        Aug,
                        Sep,
                        Oct,
                        Nov,
                        Dec,
                        Rate,
                        Stamp,
                        StampUSD,
                        ELAmount,
                        ELAmountUSD,
                        NetPay,
                        NetPayUSD,
                        TK1000,
                        TK500,
                        TK100,
                        TK50,
                        TK20,
                        TK10,
                        TK5,
                        TK2,
                        TK1,
                        InWords};
                rowrptEarnLeaveRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowrptEarnLeaveRow);
                return rowrptEarnLeaveRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                rptEarnLeaveDataTable cln = ((rptEarnLeaveDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new rptEarnLeaveDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnComName = base.Columns["ComName"];
                this.columnComAdd1 = base.Columns["ComAdd1"];
                this.columnComAdd2 = base.Columns["ComAdd2"];
                this.columnImgPath = base.Columns["ImgPath"];
                this.columnCaption = base.Columns["Caption"];
                this.columnEmpID = base.Columns["EmpID"];
                this.columnEmpCode = base.Columns["EmpCode"];
                this.columnEmpName = base.Columns["EmpName"];
                this.columndtJoin = base.Columns["dtJoin"];
                this.columndtReleased = base.Columns["dtReleased"];
                this.columnSectName = base.Columns["SectName"];
                this.columnDesigName = base.Columns["DesigName"];
                this.columnProssType = base.Columns["ProssType"];
                this.columnPaySource = base.Columns["PaySource"];
                this.columnPayMode = base.Columns["PayMode"];
                this.columnEmpType = base.Columns["EmpType"];
                this.columnBankAcNo = base.Columns["BankAcNo"];
                this.columnGSUSD = base.Columns["GSUSD"];
                this.columnGS = base.Columns["GS"];
                this.columnBSUSD = base.Columns["BSUSD"];
                this.columnBS = base.Columns["BS"];
                this.columnELYear = base.Columns["ELYear"];
                this.columnTotalDay = base.Columns["TotalDay"];
                this.columnPrevTotalDay = base.Columns["PrevTotalDay"];
                this.columnGrandTotalDay = base.Columns["GrandTotalDay"];
                this.columnTotalLeave = base.Columns["TotalLeave"];
                this.columnDeductLeave = base.Columns["DeductLeave"];
                this.columnNetLeave = base.Columns["NetLeave"];
                this.columnJan = base.Columns["Jan"];
                this.columnFeb = base.Columns["Feb"];
                this.columnMar = base.Columns["Mar"];
                this.columnApr = base.Columns["Apr"];
                this.columnMay = base.Columns["May"];
                this.columnJun = base.Columns["Jun"];
                this.columnJul = base.Columns["Jul"];
                this.columnAug = base.Columns["Aug"];
                this.columnSep = base.Columns["Sep"];
                this.columnOct = base.Columns["Oct"];
                this.columnNov = base.Columns["Nov"];
                this.columnDec = base.Columns["Dec"];
                this.columnRate = base.Columns["Rate"];
                this.columnStamp = base.Columns["Stamp"];
                this.columnStampUSD = base.Columns["StampUSD"];
                this.columnELAmount = base.Columns["ELAmount"];
                this.columnELAmountUSD = base.Columns["ELAmountUSD"];
                this.columnNetPay = base.Columns["NetPay"];
                this.columnNetPayUSD = base.Columns["NetPayUSD"];
                this.columnTK1000 = base.Columns["TK1000"];
                this.columnTK500 = base.Columns["TK500"];
                this.columnTK100 = base.Columns["TK100"];
                this.columnTK50 = base.Columns["TK50"];
                this.columnTK20 = base.Columns["TK20"];
                this.columnTK10 = base.Columns["TK10"];
                this.columnTK5 = base.Columns["TK5"];
                this.columnTK2 = base.Columns["TK2"];
                this.columnTK1 = base.Columns["TK1"];
                this.columnInWords = base.Columns["InWords"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnComName = new global::System.Data.DataColumn("ComName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComName);
                this.columnComAdd1 = new global::System.Data.DataColumn("ComAdd1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComAdd1);
                this.columnComAdd2 = new global::System.Data.DataColumn("ComAdd2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComAdd2);
                this.columnImgPath = new global::System.Data.DataColumn("ImgPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImgPath);
                this.columnCaption = new global::System.Data.DataColumn("Caption", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCaption);
                this.columnEmpID = new global::System.Data.DataColumn("EmpID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpID);
                this.columnEmpCode = new global::System.Data.DataColumn("EmpCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpCode);
                this.columnEmpName = new global::System.Data.DataColumn("EmpName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpName);
                this.columndtJoin = new global::System.Data.DataColumn("dtJoin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtJoin);
                this.columndtReleased = new global::System.Data.DataColumn("dtReleased", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtReleased);
                this.columnSectName = new global::System.Data.DataColumn("SectName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectName);
                this.columnDesigName = new global::System.Data.DataColumn("DesigName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDesigName);
                this.columnProssType = new global::System.Data.DataColumn("ProssType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProssType);
                this.columnPaySource = new global::System.Data.DataColumn("PaySource", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPaySource);
                this.columnPayMode = new global::System.Data.DataColumn("PayMode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayMode);
                this.columnEmpType = new global::System.Data.DataColumn("EmpType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpType);
                this.columnBankAcNo = new global::System.Data.DataColumn("BankAcNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAcNo);
                this.columnGSUSD = new global::System.Data.DataColumn("GSUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGSUSD);
                this.columnGS = new global::System.Data.DataColumn("GS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGS);
                this.columnBSUSD = new global::System.Data.DataColumn("BSUSD", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBSUSD);
                this.columnBS = new global::System.Data.DataColumn("BS", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBS);
                this.columnELYear = new global::System.Data.DataColumn("ELYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELYear);
                this.columnTotalDay = new global::System.Data.DataColumn("TotalDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalDay);
                this.columnPrevTotalDay = new global::System.Data.DataColumn("PrevTotalDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrevTotalDay);
                this.columnGrandTotalDay = new global::System.Data.DataColumn("GrandTotalDay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGrandTotalDay);
                this.columnTotalLeave = new global::System.Data.DataColumn("TotalLeave", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalLeave);
                this.columnDeductLeave = new global::System.Data.DataColumn("DeductLeave", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeductLeave);
                this.columnNetLeave = new global::System.Data.DataColumn("NetLeave", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetLeave);
                this.columnJan = new global::System.Data.DataColumn("Jan", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJan);
                this.columnFeb = new global::System.Data.DataColumn("Feb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFeb);
                this.columnMar = new global::System.Data.DataColumn("Mar", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMar);
                this.columnApr = new global::System.Data.DataColumn("Apr", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApr);
                this.columnMay = new global::System.Data.DataColumn("May", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMay);
                this.columnJun = new global::System.Data.DataColumn("Jun", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJun);
                this.columnJul = new global::System.Data.DataColumn("Jul", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJul);
                this.columnAug = new global::System.Data.DataColumn("Aug", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAug);
                this.columnSep = new global::System.Data.DataColumn("Sep", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSep);
                this.columnOct = new global::System.Data.DataColumn("Oct", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOct);
                this.columnNov = new global::System.Data.DataColumn("Nov", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNov);
                this.columnDec = new global::System.Data.DataColumn("Dec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDec);
                this.columnRate = new global::System.Data.DataColumn("Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate);
                this.columnStamp = new global::System.Data.DataColumn("Stamp", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStamp);
                this.columnStampUSD = new global::System.Data.DataColumn("StampUSD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStampUSD);
                this.columnELAmount = new global::System.Data.DataColumn("ELAmount", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELAmount);
                this.columnELAmountUSD = new global::System.Data.DataColumn("ELAmountUSD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnELAmountUSD);
                this.columnNetPay = new global::System.Data.DataColumn("NetPay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPay);
                this.columnNetPayUSD = new global::System.Data.DataColumn("NetPayUSD", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNetPayUSD);
                this.columnTK1000 = new global::System.Data.DataColumn("TK1000", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK1000);
                this.columnTK500 = new global::System.Data.DataColumn("TK500", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK500);
                this.columnTK100 = new global::System.Data.DataColumn("TK100", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK100);
                this.columnTK50 = new global::System.Data.DataColumn("TK50", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK50);
                this.columnTK20 = new global::System.Data.DataColumn("TK20", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK20);
                this.columnTK10 = new global::System.Data.DataColumn("TK10", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK10);
                this.columnTK5 = new global::System.Data.DataColumn("TK5", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK5);
                this.columnTK2 = new global::System.Data.DataColumn("TK2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK2);
                this.columnTK1 = new global::System.Data.DataColumn("TK1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTK1);
                this.columnInWords = new global::System.Data.DataColumn("InWords", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInWords);
                this.columnComName.ReadOnly = true;
                this.columnComName.MaxLength = 100;
                this.columnComAdd1.ReadOnly = true;
                this.columnComAdd1.MaxLength = 250;
                this.columnComAdd2.ReadOnly = true;
                this.columnComAdd2.MaxLength = 250;
                this.columnImgPath.ReadOnly = true;
                this.columnImgPath.MaxLength = 50;
                this.columnCaption.ReadOnly = true;
                this.columnCaption.MaxLength = 84;
                this.columnEmpID.AllowDBNull = false;
                this.columnEmpCode.MaxLength = 15;
                this.columnEmpName.AllowDBNull = false;
                this.columnEmpName.MaxLength = 50;
                this.columndtJoin.ReadOnly = true;
                this.columndtJoin.MaxLength = 30;
                this.columndtReleased.ReadOnly = true;
                this.columndtReleased.MaxLength = 30;
                this.columnSectName.AllowDBNull = false;
                this.columnSectName.MaxLength = 30;
                this.columnDesigName.MaxLength = 50;
                this.columnProssType.MaxLength = 25;
                this.columnPaySource.MaxLength = 20;
                this.columnPayMode.MaxLength = 20;
                this.columnEmpType.MaxLength = 30;
                this.columnBankAcNo.AllowDBNull = false;
                this.columnBankAcNo.MaxLength = 25;
                this.columnGSUSD.ReadOnly = true;
                this.columnGS.ReadOnly = true;
                this.columnBSUSD.ReadOnly = true;
                this.columnBS.ReadOnly = true;
                this.columnELYear.ReadOnly = true;
                this.columnTotalDay.ReadOnly = true;
                this.columnPrevTotalDay.ReadOnly = true;
                this.columnGrandTotalDay.ReadOnly = true;
                this.columnTotalLeave.ReadOnly = true;
                this.columnDeductLeave.ReadOnly = true;
                this.columnNetLeave.ReadOnly = true;
                this.columnJan.ReadOnly = true;
                this.columnFeb.ReadOnly = true;
                this.columnMar.ReadOnly = true;
                this.columnApr.ReadOnly = true;
                this.columnMay.ReadOnly = true;
                this.columnJun.ReadOnly = true;
                this.columnJul.ReadOnly = true;
                this.columnAug.ReadOnly = true;
                this.columnSep.ReadOnly = true;
                this.columnOct.ReadOnly = true;
                this.columnNov.ReadOnly = true;
                this.columnDec.ReadOnly = true;
                this.columnRate.ReadOnly = true;
                this.columnStamp.ReadOnly = true;
                this.columnStampUSD.ReadOnly = true;
                this.columnELAmount.ReadOnly = true;
                this.columnELAmountUSD.ReadOnly = true;
                this.columnNetPay.ReadOnly = true;
                this.columnNetPayUSD.ReadOnly = true;
                this.columnTK1000.AllowDBNull = false;
                this.columnTK500.AllowDBNull = false;
                this.columnTK100.AllowDBNull = false;
                this.columnTK50.AllowDBNull = false;
                this.columnTK20.AllowDBNull = false;
                this.columnTK10.AllowDBNull = false;
                this.columnTK5.AllowDBNull = false;
                this.columnTK2.AllowDBNull = false;
                this.columnTK1.AllowDBNull = false;
                this.columnInWords.ReadOnly = true;
                this.columnInWords.MaxLength = 1;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveRow NewrptEarnLeaveRow() {
                return ((rptEarnLeaveRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new rptEarnLeaveRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(rptEarnLeaveRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.rptEarnLeaveRowChanged != null)) {
                    this.rptEarnLeaveRowChanged(this, new rptEarnLeaveRowChangeEvent(((rptEarnLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.rptEarnLeaveRowChanging != null)) {
                    this.rptEarnLeaveRowChanging(this, new rptEarnLeaveRowChangeEvent(((rptEarnLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.rptEarnLeaveRowDeleted != null)) {
                    this.rptEarnLeaveRowDeleted(this, new rptEarnLeaveRowChangeEvent(((rptEarnLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.rptEarnLeaveRowDeleting != null)) {
                    this.rptEarnLeaveRowDeleting(this, new rptEarnLeaveRowChangeEvent(((rptEarnLeaveRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoverptEarnLeaveRow(rptEarnLeaveRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                dsEarnLeave ds = new dsEarnLeave();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "rptEarnLeaveDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class rptEarnLeaveRow : global::System.Data.DataRow {
            
            private rptEarnLeaveDataTable tablerptEarnLeave;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal rptEarnLeaveRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablerptEarnLeave = ((rptEarnLeaveDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComName {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.ComNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComName\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ComNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComAdd1 {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.ComAdd1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComAdd1\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ComAdd1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ComAdd2 {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.ComAdd2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ComAdd2\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ComAdd2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImgPath {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.ImgPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImgPath\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ImgPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Caption {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.CaptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Caption\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.CaptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EmpID {
                get {
                    return ((int)(this[this.tablerptEarnLeave.EmpIDColumn]));
                }
                set {
                    this[this.tablerptEarnLeave.EmpIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmpCode {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.EmpCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpCode\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.EmpCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmpName {
                get {
                    return ((string)(this[this.tablerptEarnLeave.EmpNameColumn]));
                }
                set {
                    this[this.tablerptEarnLeave.EmpNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dtJoin {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.dtJoinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtJoin\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.dtJoinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dtReleased {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.dtReleasedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtReleased\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.dtReleasedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SectName {
                get {
                    return ((string)(this[this.tablerptEarnLeave.SectNameColumn]));
                }
                set {
                    this[this.tablerptEarnLeave.SectNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DesigName {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.DesigNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DesigName\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.DesigNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ProssType {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.ProssTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ProssType\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ProssTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PaySource {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.PaySourceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PaySource\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.PaySourceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PayMode {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.PayModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PayMode\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.PayModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EmpType {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.EmpTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EmpType\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.EmpTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAcNo {
                get {
                    return ((string)(this[this.tablerptEarnLeave.BankAcNoColumn]));
                }
                set {
                    this[this.tablerptEarnLeave.BankAcNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GSUSD {
                get {
                    try {
                        return ((decimal)(this[this.tablerptEarnLeave.GSUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GSUSD\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.GSUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GS {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.GSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GS\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.GSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BSUSD {
                get {
                    try {
                        return ((decimal)(this[this.tablerptEarnLeave.BSUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BSUSD\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.BSUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int BS {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.BSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BS\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.BSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ELYear {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.ELYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELYear\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ELYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalDay {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.TotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalDay\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.TotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PrevTotalDay {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.PrevTotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PrevTotalDay\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.PrevTotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GrandTotalDay {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.GrandTotalDayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GrandTotalDay\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.GrandTotalDayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalLeave {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.TotalLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalLeave\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.TotalLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DeductLeave {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.DeductLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DeductLeave\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.DeductLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetLeave {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.NetLeaveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetLeave\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.NetLeaveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jan {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.JanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jan\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.JanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Feb {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.FebColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Feb\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.FebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mar {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.MarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Mar\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.MarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Apr {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.AprColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Apr\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.AprColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int May {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.MayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'May\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.MayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jun {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.JunColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jun\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.JunColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Jul {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.JulColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Jul\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.JulColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Aug {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.AugColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Aug\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.AugColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Sep {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.SepColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sep\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.SepColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Oct {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.OctColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Oct\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.OctColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Nov {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.NovColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nov\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.NovColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Dec {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.DecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Dec\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.DecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Rate {
                get {
                    try {
                        return ((decimal)(this[this.tablerptEarnLeave.RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Stamp {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.StampColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Stamp\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.StampColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StampUSD {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.StampUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StampUSD\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.StampUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ELAmount {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.ELAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELAmount\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ELAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ELAmountUSD {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.ELAmountUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ELAmountUSD\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.ELAmountUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetPay {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.NetPayColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPay\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.NetPayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NetPayUSD {
                get {
                    try {
                        return ((int)(this[this.tablerptEarnLeave.NetPayUSDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NetPayUSD\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.NetPayUSDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK1000 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK1000Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK1000Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK500 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK500Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK500Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK100 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK100Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK100Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK50 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK50Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK50Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK20 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK20Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK20Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK10 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK10Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK10Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK5 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK5Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK5Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK2 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK2Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TK1 {
                get {
                    return ((int)(this[this.tablerptEarnLeave.TK1Column]));
                }
                set {
                    this[this.tablerptEarnLeave.TK1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string InWords {
                get {
                    try {
                        return ((string)(this[this.tablerptEarnLeave.InWordsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'InWords\' in table \'rptEarnLeave\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablerptEarnLeave.InWordsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComNameNull() {
                return this.IsNull(this.tablerptEarnLeave.ComNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComNameNull() {
                this[this.tablerptEarnLeave.ComNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComAdd1Null() {
                return this.IsNull(this.tablerptEarnLeave.ComAdd1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComAdd1Null() {
                this[this.tablerptEarnLeave.ComAdd1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComAdd2Null() {
                return this.IsNull(this.tablerptEarnLeave.ComAdd2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComAdd2Null() {
                this[this.tablerptEarnLeave.ComAdd2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImgPathNull() {
                return this.IsNull(this.tablerptEarnLeave.ImgPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImgPathNull() {
                this[this.tablerptEarnLeave.ImgPathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCaptionNull() {
                return this.IsNull(this.tablerptEarnLeave.CaptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCaptionNull() {
                this[this.tablerptEarnLeave.CaptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpCodeNull() {
                return this.IsNull(this.tablerptEarnLeave.EmpCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpCodeNull() {
                this[this.tablerptEarnLeave.EmpCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdtJoinNull() {
                return this.IsNull(this.tablerptEarnLeave.dtJoinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdtJoinNull() {
                this[this.tablerptEarnLeave.dtJoinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdtReleasedNull() {
                return this.IsNull(this.tablerptEarnLeave.dtReleasedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdtReleasedNull() {
                this[this.tablerptEarnLeave.dtReleasedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDesigNameNull() {
                return this.IsNull(this.tablerptEarnLeave.DesigNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDesigNameNull() {
                this[this.tablerptEarnLeave.DesigNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProssTypeNull() {
                return this.IsNull(this.tablerptEarnLeave.ProssTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProssTypeNull() {
                this[this.tablerptEarnLeave.ProssTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPaySourceNull() {
                return this.IsNull(this.tablerptEarnLeave.PaySourceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPaySourceNull() {
                this[this.tablerptEarnLeave.PaySourceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPayModeNull() {
                return this.IsNull(this.tablerptEarnLeave.PayModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPayModeNull() {
                this[this.tablerptEarnLeave.PayModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpTypeNull() {
                return this.IsNull(this.tablerptEarnLeave.EmpTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpTypeNull() {
                this[this.tablerptEarnLeave.EmpTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGSUSDNull() {
                return this.IsNull(this.tablerptEarnLeave.GSUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGSUSDNull() {
                this[this.tablerptEarnLeave.GSUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGSNull() {
                return this.IsNull(this.tablerptEarnLeave.GSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGSNull() {
                this[this.tablerptEarnLeave.GSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBSUSDNull() {
                return this.IsNull(this.tablerptEarnLeave.BSUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBSUSDNull() {
                this[this.tablerptEarnLeave.BSUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBSNull() {
                return this.IsNull(this.tablerptEarnLeave.BSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBSNull() {
                this[this.tablerptEarnLeave.BSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsELYearNull() {
                return this.IsNull(this.tablerptEarnLeave.ELYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetELYearNull() {
                this[this.tablerptEarnLeave.ELYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalDayNull() {
                return this.IsNull(this.tablerptEarnLeave.TotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalDayNull() {
                this[this.tablerptEarnLeave.TotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrevTotalDayNull() {
                return this.IsNull(this.tablerptEarnLeave.PrevTotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrevTotalDayNull() {
                this[this.tablerptEarnLeave.PrevTotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGrandTotalDayNull() {
                return this.IsNull(this.tablerptEarnLeave.GrandTotalDayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGrandTotalDayNull() {
                this[this.tablerptEarnLeave.GrandTotalDayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalLeaveNull() {
                return this.IsNull(this.tablerptEarnLeave.TotalLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalLeaveNull() {
                this[this.tablerptEarnLeave.TotalLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeductLeaveNull() {
                return this.IsNull(this.tablerptEarnLeave.DeductLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeductLeaveNull() {
                this[this.tablerptEarnLeave.DeductLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetLeaveNull() {
                return this.IsNull(this.tablerptEarnLeave.NetLeaveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetLeaveNull() {
                this[this.tablerptEarnLeave.NetLeaveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJanNull() {
                return this.IsNull(this.tablerptEarnLeave.JanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJanNull() {
                this[this.tablerptEarnLeave.JanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFebNull() {
                return this.IsNull(this.tablerptEarnLeave.FebColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFebNull() {
                this[this.tablerptEarnLeave.FebColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarNull() {
                return this.IsNull(this.tablerptEarnLeave.MarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarNull() {
                this[this.tablerptEarnLeave.MarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAprNull() {
                return this.IsNull(this.tablerptEarnLeave.AprColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAprNull() {
                this[this.tablerptEarnLeave.AprColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMayNull() {
                return this.IsNull(this.tablerptEarnLeave.MayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMayNull() {
                this[this.tablerptEarnLeave.MayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJunNull() {
                return this.IsNull(this.tablerptEarnLeave.JunColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJunNull() {
                this[this.tablerptEarnLeave.JunColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJulNull() {
                return this.IsNull(this.tablerptEarnLeave.JulColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJulNull() {
                this[this.tablerptEarnLeave.JulColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAugNull() {
                return this.IsNull(this.tablerptEarnLeave.AugColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAugNull() {
                this[this.tablerptEarnLeave.AugColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSepNull() {
                return this.IsNull(this.tablerptEarnLeave.SepColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSepNull() {
                this[this.tablerptEarnLeave.SepColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOctNull() {
                return this.IsNull(this.tablerptEarnLeave.OctColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOctNull() {
                this[this.tablerptEarnLeave.OctColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNovNull() {
                return this.IsNull(this.tablerptEarnLeave.NovColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNovNull() {
                this[this.tablerptEarnLeave.NovColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDecNull() {
                return this.IsNull(this.tablerptEarnLeave.DecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDecNull() {
                this[this.tablerptEarnLeave.DecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRateNull() {
                return this.IsNull(this.tablerptEarnLeave.RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRateNull() {
                this[this.tablerptEarnLeave.RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStampNull() {
                return this.IsNull(this.tablerptEarnLeave.StampColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStampNull() {
                this[this.tablerptEarnLeave.StampColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStampUSDNull() {
                return this.IsNull(this.tablerptEarnLeave.StampUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStampUSDNull() {
                this[this.tablerptEarnLeave.StampUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsELAmountNull() {
                return this.IsNull(this.tablerptEarnLeave.ELAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetELAmountNull() {
                this[this.tablerptEarnLeave.ELAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsELAmountUSDNull() {
                return this.IsNull(this.tablerptEarnLeave.ELAmountUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetELAmountUSDNull() {
                this[this.tablerptEarnLeave.ELAmountUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetPayNull() {
                return this.IsNull(this.tablerptEarnLeave.NetPayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetPayNull() {
                this[this.tablerptEarnLeave.NetPayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNetPayUSDNull() {
                return this.IsNull(this.tablerptEarnLeave.NetPayUSDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNetPayUSDNull() {
                this[this.tablerptEarnLeave.NetPayUSDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInWordsNull() {
                return this.IsNull(this.tablerptEarnLeave.InWordsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInWordsNull() {
                this[this.tablerptEarnLeave.InWordsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class rptEarnLeaveRowChangeEvent : global::System.EventArgs {
            
            private rptEarnLeaveRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveRowChangeEvent(rptEarnLeaveRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public rptEarnLeaveRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace GTRHRIS.dsEarnLeaveTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class rptEarnLeaveTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public rptEarnLeaveTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "rptEarnLeave";
            tableMapping.ColumnMappings.Add("ComName", "ComName");
            tableMapping.ColumnMappings.Add("ComAdd1", "ComAdd1");
            tableMapping.ColumnMappings.Add("ComAdd2", "ComAdd2");
            tableMapping.ColumnMappings.Add("ImgPath", "ImgPath");
            tableMapping.ColumnMappings.Add("Caption", "Caption");
            tableMapping.ColumnMappings.Add("EmpID", "EmpID");
            tableMapping.ColumnMappings.Add("EmpCode", "EmpCode");
            tableMapping.ColumnMappings.Add("EmpName", "EmpName");
            tableMapping.ColumnMappings.Add("dtJoin", "dtJoin");
            tableMapping.ColumnMappings.Add("dtReleased", "dtReleased");
            tableMapping.ColumnMappings.Add("SectName", "SectName");
            tableMapping.ColumnMappings.Add("DesigName", "DesigName");
            tableMapping.ColumnMappings.Add("ProssType", "ProssType");
            tableMapping.ColumnMappings.Add("PaySource", "PaySource");
            tableMapping.ColumnMappings.Add("PayMode", "PayMode");
            tableMapping.ColumnMappings.Add("EmpType", "EmpType");
            tableMapping.ColumnMappings.Add("BankAcNo", "BankAcNo");
            tableMapping.ColumnMappings.Add("GSUSD", "GSUSD");
            tableMapping.ColumnMappings.Add("GS", "GS");
            tableMapping.ColumnMappings.Add("BSUSD", "BSUSD");
            tableMapping.ColumnMappings.Add("BS", "BS");
            tableMapping.ColumnMappings.Add("ELYear", "ELYear");
            tableMapping.ColumnMappings.Add("TotalDay", "TotalDay");
            tableMapping.ColumnMappings.Add("PrevTotalDay", "PrevTotalDay");
            tableMapping.ColumnMappings.Add("GrandTotalDay", "GrandTotalDay");
            tableMapping.ColumnMappings.Add("TotalLeave", "TotalLeave");
            tableMapping.ColumnMappings.Add("DeductLeave", "DeductLeave");
            tableMapping.ColumnMappings.Add("NetLeave", "NetLeave");
            tableMapping.ColumnMappings.Add("Jan", "Jan");
            tableMapping.ColumnMappings.Add("Feb", "Feb");
            tableMapping.ColumnMappings.Add("Mar", "Mar");
            tableMapping.ColumnMappings.Add("Apr", "Apr");
            tableMapping.ColumnMappings.Add("May", "May");
            tableMapping.ColumnMappings.Add("Jun", "Jun");
            tableMapping.ColumnMappings.Add("Jul", "Jul");
            tableMapping.ColumnMappings.Add("Aug", "Aug");
            tableMapping.ColumnMappings.Add("Sep", "Sep");
            tableMapping.ColumnMappings.Add("Oct", "Oct");
            tableMapping.ColumnMappings.Add("Nov", "Nov");
            tableMapping.ColumnMappings.Add("Dec", "Dec");
            tableMapping.ColumnMappings.Add("Rate", "Rate");
            tableMapping.ColumnMappings.Add("Stamp", "Stamp");
            tableMapping.ColumnMappings.Add("StampUSD", "StampUSD");
            tableMapping.ColumnMappings.Add("ELAmount", "ELAmount");
            tableMapping.ColumnMappings.Add("ELAmountUSD", "ELAmountUSD");
            tableMapping.ColumnMappings.Add("NetPay", "NetPay");
            tableMapping.ColumnMappings.Add("NetPayUSD", "NetPayUSD");
            tableMapping.ColumnMappings.Add("TK1000", "TK1000");
            tableMapping.ColumnMappings.Add("TK500", "TK500");
            tableMapping.ColumnMappings.Add("TK100", "TK100");
            tableMapping.ColumnMappings.Add("TK50", "TK50");
            tableMapping.ColumnMappings.Add("TK20", "TK20");
            tableMapping.ColumnMappings.Add("TK10", "TK10");
            tableMapping.ColumnMappings.Add("TK5", "TK5");
            tableMapping.ColumnMappings.Add("TK2", "TK2");
            tableMapping.ColumnMappings.Add("TK1", "TK1");
            tableMapping.ColumnMappings.Add("InWords", "InWords");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::GTRHRIS.Properties.Settings.Default.GTRHRIS_YAHATConnectionString2;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.rptEarnLeave";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ComId", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 3, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProssType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Paymode", global::System.Data.SqlDbType.VarChar, 10, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpType", global::System.Data.SqlDbType.VarChar, 50, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@SectId", global::System.Data.SqlDbType.SmallInt, 2, global::System.Data.ParameterDirection.Input, 5, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Empid", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Band", global::System.Data.SqlDbType.VarChar, 30, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@EmpStatus", global::System.Data.SqlDbType.VarChar, 20, global::System.Data.ParameterDirection.Input, 0, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PayType", global::System.Data.SqlDbType.TinyInt, 1, global::System.Data.ParameterDirection.Input, 3, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(dsEarnLeave.rptEarnLeaveDataTable dataTable, global::System.Nullable<byte> ComId, string ProssType, string Paymode, string EmpType, global::System.Nullable<short> SectId, global::System.Nullable<long> Empid, string Band, string EmpStatus, global::System.Nullable<byte> PayType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ComId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((byte)(ComId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProssType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProssType));
            }
            if ((Paymode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Paymode));
            }
            if ((EmpType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(EmpType));
            }
            if ((SectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((short)(SectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Empid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(Empid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Band == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Band));
            }
            if ((EmpStatus == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(EmpStatus));
            }
            if ((PayType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((byte)(PayType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual dsEarnLeave.rptEarnLeaveDataTable GetData(global::System.Nullable<byte> ComId, string ProssType, string Paymode, string EmpType, global::System.Nullable<short> SectId, global::System.Nullable<long> Empid, string Band, string EmpStatus, global::System.Nullable<byte> PayType) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ComId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((byte)(ComId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProssType == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ProssType));
            }
            if ((Paymode == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Paymode));
            }
            if ((EmpType == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(EmpType));
            }
            if ((SectId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[5].Value = ((short)(SectId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Empid.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((long)(Empid.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Band == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(Band));
            }
            if ((EmpStatus == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(EmpStatus));
            }
            if ((PayType.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[9].Value = ((byte)(PayType.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            dsEarnLeave.rptEarnLeaveDataTable dataTable = new dsEarnLeave.rptEarnLeaveDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(dsEarnLeave dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(dsEarnLeave dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(dsEarnLeave dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(dsEarnLeave dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591